version: '3.9'

services:
  web:
    build:
      context: ..
      dockerfile: docker/Dockerfile.prod
    volumes:
      - static_volume:/home/app/web/app/static
      - media_volume:/home/app/web/app/media
    expose:
      - ${PORT}
    command: poetry run gunicorn --reload --bind 0.0.0.0:8000 --workers ${WORKERS} --log-level ${LEVEL} config.wsgi:application
    env_file:
      - .env
    depends_on:
      - migration
      - redis
    networks:
      - network

  migration:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    command: poetry run python3 manage.py migrate
    depends_on:
      - db
    env_file:
      - .env
    networks:
      - network

  db:
    image: mysql:8.0
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${SQL_DATABASE}
      MYSQL_USER: ${SQL_USER}
      MYSQL_PASSWORD: ${SQL_PASSWORD}
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    expose:
      - 3306
    networks:
      - network
    env_file:
      - .env

  redis:
    restart: unless-stopped
    image: redis:7.0.5-alpine
    expose:
      - ${REDIS_PORT}
    networks:
      - network

  nginx:
    build: ../nginx
    volumes:
      - static_volume:/home/app/web/app/static
      - media_volume:/home/app/web/app/media
    ports:
      - ${NGINX_PORT}:${NGINX_PORT}
    depends_on:
      - web
    networks:
      - network

  celery:
    build:
      context: ..
      dockerfile: docker/Dockerfile.prod
    command: celery -A config worker -l info
    depends_on:
      - web
    env_file:
      - .env
    networks:
      - network


networks:
  network:
    driver: bridge

volumes:
  mysql_data:
  static_volume:
  media_volume:
